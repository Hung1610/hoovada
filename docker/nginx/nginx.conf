# https://github.com/frol/flask-restplus-server-example/blob/master/deploy/stack1/revproxy/conf.d/default.conf
# https://www.patricksoftwareblog.com/how-to-configure-nginx-for-a-flask-web-application/
#https://testdriven.io/blog/dockerizing-flask-with-postgres-gunicorn-and-nginx/

upstream app {
    server 127.0.0.1:5000;
}

map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}
http {   

    server {
        
        listen 80 default_server;

        #https://serverfault.com/questions/914906/what-is-the-difference-between-server-name-and-server-name-in-nginx
        server_name _;

        #disables emitting nginx version on error pages and in the “Server” response header field.
        server_tokens off;

        #Define the specified charset to the “Content-Type” response header field
        charset utf-8;



        location * {
            if ($request_method = 'OPTIONS') {
                # CORS configuration, from http://enable-cors.org/server_nginx.html
                add_header 'Access-Control-Allow-Origin' '*';
                
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                
                # Custom headers and headers various browsers *should* be OK with but aren't
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';

                # Tell client that this pre-flight info is valid for 20 days
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            if ($request_method = 'POST') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
            }
            if ($request_method = 'GET') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Credentials' 'true';
                add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
            }
        }

        location /api/v1/ {
            proxy_pass http://app;

            proxy_redirect off;

            # the name and port of the NGINX server (Host $host)
            proxy_set_header Host $host;

            # the IP address of the user
            proxy_set_header X-Real-IP         $remote_addr;

            #the IP addresses of every server the client has been proxied through up to this point
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            
            #the schema of the original client request, http or an https request
            proxy_set_header X-Forwarded-Proto https;

            #the maximum size for files being uploaded
            client_max_body_size 1000M;   
        }

        location /swaggerui {
            proxy_pass http://app;

            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP         $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            client_max_body_size 1000M;   
        }

        #https://stackoverflow.com/questions/15193743/nginx-reverse-proxy-websockets
        location /socket.io {
            proxy_pass http://app;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;

            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP         $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            client_max_body_size 1000M;  
        }
    }

    proxy_connect_timeout      50000;
    proxy_send_timeout         50000;
    proxy_read_timeout         50000; 
}